trigger:
  - main
  - develop

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  SONAR_PROJECT_KEY: 'devops-task-manager'
  DOCKER_REPOSITORY: 'your-docker-hub-username/task-manager'
  DOCKER_IMAGE_TAG: '$(Build.BuildId)'

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: Cache@2
      inputs:
        key: 'maven | "$(Agent.OS)" | **/pom.xml'
        restoreKeys: |
          maven | "$(Agent.OS)"
          maven
        path: $(MAVEN_CACHE_FOLDER)
      displayName: Cache Maven packages

    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean test'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '$(MAVEN_OPTS)'
      displayName: 'Run Tests'

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '$(MAVEN_OPTS)'
      displayName: 'Build Package'

    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQube'
        scannerMode: 'Other'
        extraProperties: |
          sonar.projectKey=$(SONAR_PROJECT_KEY)
          sonar.java.binaries=target/classes
          sonar.sources=src/main
          sonar.tests=src/test
          sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'sonar:sonar'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenOptions: '$(MAVEN_OPTS)'
      displayName: 'Run SonarQube Analysis'

    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub'
        repository: $(DOCKER_REPOSITORY)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(DOCKER_IMAGE_TAG)
          latest
      displayName: 'Build and Push Docker Image'

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $sonarReport = Get-Content -Path "$(System.DefaultWorkingDirectory)/.sonarqube/out/.sonar/report-task.txt" -Raw
          $body = "SonarQube Analysis Report:`n`n$sonarReport"
          Send-MailMessage -From "pipeline@yourdomain.com" -To "team@yourdomain.com" -Subject "SonarQube Analysis Report - Build $(Build.BuildNumber)" -Body $body -SmtpServer "your-smtp-server"
      displayName: 'Send SonarQube Report Email'

- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'windows-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AnsiblePlaybook@0
            inputs:
              playbookSourceType: 'inline'
              inventoryType: 'inline'
              inline: |
                - hosts: iis_servers
                  tasks:
                    - name: Deploy application to IIS
                      win_iis_website:
                        name: TaskManager
                        state: started
                        port: 80
                        physical_path: C:\inetpub\wwwroot\taskmanager
                    - name: Copy application files
                      win_copy:
                        src: "{{ workspace }}/target/*.jar"
                        dest: C:\inetpub\wwwroot\taskmanager\
              inventory: |
                [iis_servers]
                your-iis-server ansible_host=your-server-ip
