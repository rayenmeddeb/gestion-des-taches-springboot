trigger:
  branches:
    include:
    - main
    - develop
    - feature/*

variables:
  # Maven
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  # Version
  MAJOR: '1'
  MINOR: '0'
  PATCH: $[counter(variables['MAJOR'].variables['MINOR'], 0)]
  VERSION: '$(MAJOR).$(MINOR).$(PATCH)'
  # Docker
  DOCKER_REPOSITORY: 'your-dockerhub-username/task-manager'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: BuildTest
    pool:
      vmImage: 'windows-latest'
    steps:
    # Cache Maven packages
    - task: Cache@2
      inputs:
        key: 'maven | "$(Agent.OS)" | **/pom.xml'
        restoreKeys: |
          maven | "$(Agent.OS)"
        path: $(MAVEN_CACHE_FOLDER)
      displayName: 'Cache Maven packages'

    # Setup JDK
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
      displayName: 'Setup JDK 17'

    # Run Unit Tests
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean test'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '$(MAVEN_OPTS)'
      displayName: 'Run Unit Tests'

    # SonarQube Analysis
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQube'
        scannerMode: 'Other'
        extraProperties: |
          sonar.projectKey=task-manager
          sonar.sources=src/main
          sonar.tests=src/test
          sonar.java.binaries=target/classes
          sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
      displayName: 'Prepare SonarQube Analysis'

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package sonar:sonar'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenOptions: '$(MAVEN_OPTS)'
      displayName: 'Build and SonarQube Analysis'

    # Publish Artifact
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'target/*.jar'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish JAR Artifact'

    # Build and Push Docker Image
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub'
        repository: $(DOCKER_REPOSITORY)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(VERSION)
          latest
      displayName: 'Build and Push Docker Image'

    # Scan Docker Image
    - task: container-scan@0
      inputs:
        image: '$(DOCKER_REPOSITORY):$(VERSION)'
      displayName: 'Scan Docker Image'

    # Send Email Notifications
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $sonarReport = Get-Content -Path "$(System.DefaultWorkingDirectory)/.sonarqube/out/.sonar/report-task.txt" -Raw
          $dockerScanReport = Get-Content -Path "$(System.DefaultWorkingDirectory)/container-scan-report.json" -Raw
          
          $body = @"
          Build Number: $(Build.BuildNumber)
          
          SonarQube Analysis Report:
          $sonarReport
          
          Docker Security Scan Report:
          $dockerScanReport
          "@
          
          Send-MailMessage -From "pipeline@yourdomain.com" -To "team@yourdomain.com" -Subject "Build Report - $(Build.BuildNumber)" -Body $body -SmtpServer "your-smtp-server"
      displayName: 'Send Email Reports'
